{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","good1","good2","LENGTH","length","ALPABET","localeCompare","reverse","App","state","NONE","setState","sortByLength","sortByAlpabet","reset","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAmBzB,OAjBAG,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQL,GACN,KAAKJ,EAASU,OACZ,OAAOF,EAAMG,OAASF,EAAME,OAE9B,KAAKX,EAASY,QACZ,OAAOJ,EAAMK,cAAcJ,GAE7B,QACE,OAAO,MAITJ,GACFC,EAAaQ,UAGRR,G,SAlCJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA0CE,IAAMe,EAAb,4MACEC,MAAQ,CACNX,YAAY,EACZD,SAAUJ,EAASiB,MAHvB,EAMEH,QAAU,WACR,EAAKI,UAAS,SAACF,GAAD,MAAmB,CAC/BX,YAAaW,EAAMX,gBARzB,EAYEc,aAAe,kBAAM,EAAKD,UAAS,iBAAO,CACxCd,SAAUJ,EAASU,YAbvB,EAgBEU,cAAgB,kBAAM,EAAKF,UAAS,iBAAO,CACzCd,SAAUJ,EAASY,aAjBvB,EAoBES,MAAQ,kBAAM,EAAKH,UAAS,iBAAO,CACjCd,SAAUJ,EAASiB,KACnBZ,YAAY,OAtBhB,4CAyBE,WACE,MAAiCiB,KAAKN,MAA9BX,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SAEpB,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEnB,IAAaJ,EAASY,QAClB,iBACA,0BAENa,QAASH,KAAKF,cAPhB,iCAYA,wBACEI,KAAK,SACLD,UACEnB,IAAaJ,EAASU,OAClB,oBACA,6BAENe,QAASH,KAAKH,aAPhB,4BAYA,wBACEK,KAAK,SACLD,UACElB,EACI,oBACA,6BAENoB,QAASH,KAAKR,QAPhB,sBAYET,GAAcD,IAAaJ,EAASiB,OACpC,wBACEO,KAAK,SACLD,UAAU,4BACVE,QAASH,KAAKD,MAHhB,sBAUJ,6BACE,6BACGnB,EAAkBD,EAAiBqB,KAAKN,OAAOU,KAAI,SAAAC,GAAI,OACtD,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,iBAjFtC,GAAyBC,IAAMC,WCxD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fb133916.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      case SortType.ALPABET:\n        return good1.localeCompare(good2);\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState((state: State) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByLength = () => this.setState(() => ({\n    sortType: SortType.LENGTH,\n  }));\n\n  sortByAlpabet = () => this.setState(() => ({\n    sortType: SortType.ALPABET,\n  }));\n\n  reset = () => this.setState(() => ({\n    sortType: SortType.NONE,\n    isReversed: false,\n  }));\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              sortType === SortType.ALPABET\n                ? 'button is-info'\n                : 'button is-info is-light'\n            }\n            onClick={this.sortByAlpabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              sortType === SortType.LENGTH\n                ? 'button is-success'\n                : 'button is-success is-light'\n            }\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              isReversed\n                ? 'button is-warning'\n                : 'button is-warning is-light'\n            }\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, this.state).map(good => (\n              <li data-cy=\"Good\" key={good}>{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}